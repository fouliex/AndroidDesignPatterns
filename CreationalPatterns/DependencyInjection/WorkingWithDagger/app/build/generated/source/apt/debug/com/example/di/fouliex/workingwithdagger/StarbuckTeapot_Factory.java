// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.di.fouliex.workingwithdagger;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class StarbuckTeapot_Factory implements Factory<StarbuckTeapot> {
  private final Provider<Heater> heaterProvider;

  private final Provider<Drink> drinkProvider;

  public StarbuckTeapot_Factory(Provider<Heater> heaterProvider, Provider<Drink> drinkProvider) {
    assert heaterProvider != null;
    this.heaterProvider = heaterProvider;
    assert drinkProvider != null;
    this.drinkProvider = drinkProvider;
  }

  @Override
  public StarbuckTeapot get() {
    return new StarbuckTeapot(heaterProvider.get(), drinkProvider.get());
  }

  public static Factory<StarbuckTeapot> create(
      Provider<Heater> heaterProvider, Provider<Drink> drinkProvider) {
    return new StarbuckTeapot_Factory(heaterProvider, drinkProvider);
  }
}
