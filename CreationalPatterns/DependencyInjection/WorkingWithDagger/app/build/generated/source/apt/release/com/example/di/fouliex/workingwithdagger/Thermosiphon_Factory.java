// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.di.fouliex.workingwithdagger;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class Thermosiphon_Factory implements Factory<Thermosiphon> {
  private final Provider<Heater> heaterProvider;

  public Thermosiphon_Factory(Provider<Heater> heaterProvider) {
    assert heaterProvider != null;
    this.heaterProvider = heaterProvider;
  }

  @Override
  public Thermosiphon get() {
    return new Thermosiphon(heaterProvider.get());
  }

  public static Factory<Thermosiphon> create(Provider<Heater> heaterProvider) {
    return new Thermosiphon_Factory(heaterProvider);
  }

  /** Proxies {@link Thermosiphon#Thermosiphon(Heater)}. */
  public static Thermosiphon newThermosiphon(Heater heater) {
    return new Thermosiphon(heater);
  }
}
